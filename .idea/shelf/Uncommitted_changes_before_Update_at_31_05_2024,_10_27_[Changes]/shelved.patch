Index: app/src/main/java/ru/practicum/android/diploma/ui/vacancies/VacancyViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.practicum.android.diploma.ui.vacancies\n\nimport androidx.lifecycle.LiveData\nimport androidx.lifecycle.MutableLiveData\nimport androidx.lifecycle.ViewModel\nimport androidx.lifecycle.viewModelScope\nimport kotlinx.coroutines.launch\nimport ru.practicum.android.diploma.domain.api.details.VacancyDetailsInteractor\nimport ru.practicum.android.diploma.domain.api.dictionary.DictionaryInteractor\nimport ru.practicum.android.diploma.domain.api.favorites.FavoritesInteractor\nimport ru.practicum.android.diploma.domain.models.Vacancy\nimport ru.practicum.android.diploma.domain.models.VacancyDetails\nimport ru.practicum.android.diploma.domain.sharing.SharingInteractor\n\nclass VacancyViewModel(\n    private val vacancyInteractor: VacancyDetailsInteractor,\n    private val dictionaryInteractor: DictionaryInteractor,\n    private val favoritesInteractor: FavoritesInteractor,\n    private var sharingInteractor: SharingInteractor\n\n) : ViewModel() {\n\n    private val _stateLiveData = MutableLiveData<VacancyState>()\n    val stateLiveData: LiveData<VacancyState> get() = _stateLiveData\n\n    fun fetchVacancyDetails(vacancyId: String) {\n        renderState(VacancyState.Loading)\n        viewModelScope.launch {\n            val currencyDictionary = dictionaryInteractor.getCurrencyDictionary()\n            vacancyInteractor.getVacancyDetails(vacancyId).collect { result ->\n                result.onSuccess { vacancyDetails ->\n                    val currSymbol = currencyDictionary[vacancyDetails?.salary?.currency]?.abbr ?: \"\"\n                    val isFavorite = favoritesInteractor.isVacancyFavorite(vacancyDetails.id)\n                    renderState(\n                        VacancyState.Content(vacancyDetails, currSymbol, isFavorite)\n                    )\n                }.onFailure {\n                    renderState(\n                        VacancyState.Error\n                    )\n                }\n            }\n        }\n    }\n\n    fun addToFavorite() {\n        val state = stateLiveData.value as VacancyState.Content\n        val vacancyDetails = state.vacancyDetails\n        val vacancy = Vacancy(\n            id = vacancyDetails.id,\n            name = vacancyDetails.name,\n            salary = vacancyDetails.salary,\n            city = vacancyDetails.areaName,\n            employerName = vacancyDetails.employerName ?: \"\",\n            urlImage = vacancyDetails.logoUrl\n        )\n        viewModelScope.launch {\n            if (state.isFavorite) {\n                favoritesInteractor.removeVacancyFromFavorites(vacancy)\n                favoritesInteractor.removeVacancyDetails(vacancyDetails.id)\n            } else {\n                favoritesInteractor.addVacancyDetails(vacancyDetails)\n                favoritesInteractor.addVacancyToFavorites(vacancy)\n            }\n            renderState(\n                VacancyState.Content(\n                    vacancyDetails = vacancyDetails,\n                    currencySymbol = state.currencySymbol,\n                    isFavorite = !state.isFavorite\n                )\n            )\n        }\n    }\n\n    private fun renderState(state: VacancyState) {\n        _stateLiveData.value = state\n    }\n\n    fun shareApp(vacancyDetails: VacancyDetails) {\n        sharingInteractor.shareApp(vacancyDetails.alternateUrl)\n    }\n\n    fun phoneCall(phoneNumber: String) {\n        sharingInteractor.phoneCall(phoneNumber)\n    }\n\n    fun eMail(email: String) {\n        sharingInteractor.eMail(email)\n    }\n}\n
===================================================================
diff --git a/app/src/main/java/ru/practicum/android/diploma/ui/vacancies/VacancyViewModel.kt b/app/src/main/java/ru/practicum/android/diploma/ui/vacancies/VacancyViewModel.kt
--- a/app/src/main/java/ru/practicum/android/diploma/ui/vacancies/VacancyViewModel.kt	
+++ b/app/src/main/java/ru/practicum/android/diploma/ui/vacancies/VacancyViewModel.kt	
@@ -29,7 +29,7 @@
             val currencyDictionary = dictionaryInteractor.getCurrencyDictionary()
             vacancyInteractor.getVacancyDetails(vacancyId).collect { result ->
                 result.onSuccess { vacancyDetails ->
-                    val currSymbol = currencyDictionary[vacancyDetails?.salary?.currency]?.abbr ?: ""
+                    val currSymbol = currencyDictionary[vacancyDetails.salary?.currency]?.abbr ?: ""
                     val isFavorite = favoritesInteractor.isVacancyFavorite(vacancyDetails.id)
                     renderState(
                         VacancyState.Content(vacancyDetails, currSymbol, isFavorite)
