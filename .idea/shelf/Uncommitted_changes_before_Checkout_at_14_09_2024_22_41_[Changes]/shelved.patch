Index: app/src/main/java/ru/practicum/android/diploma/data/network/RetrofitNetworkClient.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.practicum.android.diploma.data.network\r\n\r\nimport android.content.Context\r\nimport kotlinx.coroutines.Dispatchers\r\nimport kotlinx.coroutines.withContext\r\nimport ru.practicum.android.diploma.R\r\nimport ru.practicum.android.diploma.data.dto.NetworkResponse\r\nimport ru.practicum.android.diploma.data.dto.VacancySearchRequest\r\nimport ru.practicum.android.diploma.data.dto.vacancy_detail.VacancyDetailsRequest\r\nimport ru.practicum.android.diploma.data.dto.vacancy_detail.VacancyDetailsResponse\r\nimport ru.practicum.android.diploma.util.Connected\r\nimport java.io.IOException\r\n\r\nclass RetrofitNetworkClient(\r\n    private val context: Context,\r\n    private val hhApi: HHApiService,\r\n    private val connected: Connected\r\n) : NetworkClient {\r\n\r\n    override suspend fun doRequest(dto: Any): NetworkResponse {\r\n        if (dto !is VacancySearchRequest && dto !is VacancyDetailsRequest) {\r\n            return NetworkResponse().apply {\r\n                resultCode = ERROR_CODE_BAD_REQUEST\r\n                message = context.getString(R.string.search_error_server)\r\n            }\r\n        }\r\n\r\n        return withContext(Dispatchers.IO) {\r\n            if (connected.isConnected()) {\r\n                try {\r\n\r\n                    when (dto) {\r\n                        is VacancySearchRequest -> {\r\n                            val response = hhApi.getVacancies(\r\n                                dto.vacancyName,\r\n                                dto.area,\r\n                                dto.salary,\r\n                                dto.onlyWithSalary,\r\n                                dto.professionalRole\r\n                            )\r\n                            response.apply { resultCode = RESULT_CODE_SUCCESS }\r\n                        }\r\n\r\n                        is VacancyDetailsRequest -> {\r\n                            val responseDto = hhApi.getVacancy(dto.vacancyId)\r\n                            val response = VacancyDetailsResponse(responseDto)\r\n                            response.apply { resultCode = RESULT_CODE_SUCCESS }\r\n                        }\r\n\r\n                        else -> {\r\n                            NetworkResponse().apply {\r\n                                resultCode = ERROR_CODE_SERVER\r\n                                message = context.getString(R.string.search_error_server)\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (e: IOException) {\r\n                    NetworkResponse().apply {\r\n                        resultCode = ERROR_CODE_SERVER\r\n                        message = context.getString(R.string.search_error_server)\r\n                    }\r\n                }\r\n            } else {\r\n                NetworkResponse().apply {\r\n                    resultCode = ERROR_CODE_INTERNET\r\n                    message = context.getString(R.string.search_error_no_connect)\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    companion object {\r\n        const val RESULT_CODE_SUCCESS = 200\r\n        const val ERROR_CODE_INTERNET = -1\r\n        const val ERROR_CODE_SERVER = 500\r\n        const val ERROR_CODE_BAD_REQUEST = 400\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/ru/practicum/android/diploma/data/network/RetrofitNetworkClient.kt b/app/src/main/java/ru/practicum/android/diploma/data/network/RetrofitNetworkClient.kt
--- a/app/src/main/java/ru/practicum/android/diploma/data/network/RetrofitNetworkClient.kt	
+++ b/app/src/main/java/ru/practicum/android/diploma/data/network/RetrofitNetworkClient.kt	
@@ -75,5 +75,6 @@
         const val ERROR_CODE_INTERNET = -1
         const val ERROR_CODE_SERVER = 500
         const val ERROR_CODE_BAD_REQUEST = 400
+        const val ERROR_CODE_NOT_FOUND = 404
     }
 }
Index: app/src/main/java/ru/practicum/android/diploma/presentation/viewmodel/VacancyDetailsViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.practicum.android.diploma.presentation.viewmodel\r\n\r\nimport androidx.lifecycle.MutableLiveData\r\nimport androidx.lifecycle.ViewModel\r\nimport androidx.lifecycle.viewModelScope\r\nimport kotlinx.coroutines.launch\r\nimport ru.practicum.android.diploma.domain.vacancy_details.VacancyDetailsInteractor\r\nimport ru.practicum.android.diploma.presentation.models.VacancyDetailsScreenState\r\n\r\nclass VacancyDetailsViewModel(val vacancyDetailsInteractor: VacancyDetailsInteractor) : ViewModel() {\r\n\r\n    private val stateLiveData: MutableLiveData<VacancyDetailsScreenState> = MutableLiveData()\r\n    fun getVacancy(vacancyId: String) {\r\n        stateLiveData.value = VacancyDetailsScreenState.Loading\r\n        viewModelScope.launch {\r\n            val res = vacancyDetailsInteractor.getVacancy(vacancyId)\r\n        }\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/ru/practicum/android/diploma/presentation/viewmodel/VacancyDetailsViewModel.kt b/app/src/main/java/ru/practicum/android/diploma/presentation/viewmodel/VacancyDetailsViewModel.kt
--- a/app/src/main/java/ru/practicum/android/diploma/presentation/viewmodel/VacancyDetailsViewModel.kt	
+++ b/app/src/main/java/ru/practicum/android/diploma/presentation/viewmodel/VacancyDetailsViewModel.kt	
@@ -4,6 +4,7 @@
 import androidx.lifecycle.ViewModel
 import androidx.lifecycle.viewModelScope
 import kotlinx.coroutines.launch
+import ru.practicum.android.diploma.data.network.RetrofitNetworkClient
 import ru.practicum.android.diploma.domain.vacancy_details.VacancyDetailsInteractor
 import ru.practicum.android.diploma.presentation.models.VacancyDetailsScreenState
 
@@ -13,7 +14,22 @@
     fun getVacancy(vacancyId: String) {
         stateLiveData.value = VacancyDetailsScreenState.Loading
         viewModelScope.launch {
-            val res = vacancyDetailsInteractor.getVacancy(vacancyId)
+            vacancyDetailsInteractor.getVacancy(vacancyId).collect { res ->
+                when (res.error) {
+                    RetrofitNetworkClient.RESULT_CODE_SUCCESS -> {
+                        stateLiveData.value = res.vacancyDetailsModel?.let { VacancyDetailsScreenState.Content(it) }
+                    }
+                    RetrofitNetworkClient.ERROR_CODE_INTERNET -> {
+                        stateLiveData.value = VacancyDetailsScreenState.ErrorNoInternet
+                    }
+                    RetrofitNetworkClient.ERROR_CODE_SERVER -> {
+                        stateLiveData.value = VacancyDetailsScreenState.ErrorServer
+                    }
+                    RetrofitNetworkClient.ERROR_CODE_NOT_FOUND -> {
+                        stateLiveData.value = VacancyDetailsScreenState.NotFound
+                    }
+                }
+            }
         }
     }
 }
Index: app/src/main/java/ru/practicum/android/diploma/domain/vacancy_details/impl/VacancyDetailsInteractorImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.practicum.android.diploma.domain.vacancy_details.impl\r\n\r\nimport kotlinx.coroutines.flow.Flow\r\nimport kotlinx.coroutines.flow.flow\r\nimport ru.practicum.android.diploma.data.dto.vacancy.VacancyRepository\r\nimport ru.practicum.android.diploma.domain.models.VacancyDetailsModel\r\nimport ru.practicum.android.diploma.domain.models.VacancyDetailsModelOrError\r\nimport ru.practicum.android.diploma.domain.vacancy_details.VacancyDetailsInteractor\r\n\r\nclass VacancyDetailsInteractorImpl(val vacancyRepository: VacancyRepository) : VacancyDetailsInteractor {\r\n    override suspend fun getVacancy(vacancyId: String): Flow<VacancyDetailsModelOrError> = flow {\r\n        val vacancyResponse = vacancyRepository.getVacancy(vacancyId)\r\n        if (vacancyResponse?.resultCode != 200) {\r\n            if (vacancyResponse != null) {\r\n                emit(VacancyDetailsModelOrError(error = vacancyResponse.resultCode, vacancyDetailsModel = null))\r\n            }\r\n        } else {\r\n            val vacancyRepositoryDto = vacancyResponse.vacancyDetails\r\n            emit(\r\n                VacancyDetailsModelOrError(\r\n                    vacancyDetailsModel = VacancyDetailsModel(\r\n                        vacancyRepositoryDto.name,\r\n                        vacancyRepositoryDto.schedule.name,\r\n                        vacancyRepositoryDto.professionalRoles.map { profession ->\r\n                            profession.name\r\n                        },\r\n                        \"от ${vacancyRepositoryDto.salary?.from} до ${vacancyRepositoryDto.salary?.to}\",\r\n                        vacancyRepositoryDto.address?.city,\r\n                        vacancyRepositoryDto.experience.name,\r\n                        vacancyRepositoryDto.keySkills.map { skill ->\r\n                            skill.name\r\n                        },\r\n                        vacancyRepositoryDto.description\r\n                    ), error = 0\r\n                )\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n
===================================================================
diff --git a/app/src/main/java/ru/practicum/android/diploma/domain/vacancy_details/impl/VacancyDetailsInteractorImpl.kt b/app/src/main/java/ru/practicum/android/diploma/domain/vacancy_details/impl/VacancyDetailsInteractorImpl.kt
--- a/app/src/main/java/ru/practicum/android/diploma/domain/vacancy_details/impl/VacancyDetailsInteractorImpl.kt	
+++ b/app/src/main/java/ru/practicum/android/diploma/domain/vacancy_details/impl/VacancyDetailsInteractorImpl.kt	
@@ -3,6 +3,7 @@
 import kotlinx.coroutines.flow.Flow
 import kotlinx.coroutines.flow.flow
 import ru.practicum.android.diploma.data.dto.vacancy.VacancyRepository
+import ru.practicum.android.diploma.data.network.RetrofitNetworkClient
 import ru.practicum.android.diploma.domain.models.VacancyDetailsModel
 import ru.practicum.android.diploma.domain.models.VacancyDetailsModelOrError
 import ru.practicum.android.diploma.domain.vacancy_details.VacancyDetailsInteractor
@@ -10,7 +11,7 @@
 class VacancyDetailsInteractorImpl(val vacancyRepository: VacancyRepository) : VacancyDetailsInteractor {
     override suspend fun getVacancy(vacancyId: String): Flow<VacancyDetailsModelOrError> = flow {
         val vacancyResponse = vacancyRepository.getVacancy(vacancyId)
-        if (vacancyResponse?.resultCode != 200) {
+        if (vacancyResponse?.resultCode != RetrofitNetworkClient.RESULT_CODE_SUCCESS) {
             if (vacancyResponse != null) {
                 emit(VacancyDetailsModelOrError(error = vacancyResponse.resultCode, vacancyDetailsModel = null))
             }
@@ -31,7 +32,7 @@
                             skill.name
                         },
                         vacancyRepositoryDto.description
-                    ), error = 0
+                    ), error = RetrofitNetworkClient.RESULT_CODE_SUCCESS
                 )
             )
         }
Index: app/src/main/java/ru/practicum/android/diploma/presentation/models/VacancyDetailsScreenState.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.practicum.android.diploma.presentation.models\r\n\r\nimport ru.practicum.android.diploma.domain.models.VacancyDetailsModel\r\n\r\nsealed interface VacancyDetailsScreenState{\r\n    data object Loading : VacancyDetailsScreenState\r\n\r\n    data class Content(val data: VacancyDetailsModel) : VacancyDetailsScreenState\r\n\r\n    data object ErrorNoInternet : VacancyDetailsScreenState\r\n\r\n    data object ErrorServer : VacancyDetailsScreenState\r\n\r\n    data object Empty : VacancyDetailsScreenState\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/ru/practicum/android/diploma/presentation/models/VacancyDetailsScreenState.kt b/app/src/main/java/ru/practicum/android/diploma/presentation/models/VacancyDetailsScreenState.kt
--- a/app/src/main/java/ru/practicum/android/diploma/presentation/models/VacancyDetailsScreenState.kt	
+++ b/app/src/main/java/ru/practicum/android/diploma/presentation/models/VacancyDetailsScreenState.kt	
@@ -11,5 +11,5 @@
 
     data object ErrorServer : VacancyDetailsScreenState
 
-    data object Empty : VacancyDetailsScreenState
+    data object NotFound : VacancyDetailsScreenState
 }
